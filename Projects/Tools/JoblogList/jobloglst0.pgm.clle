
/*--------------------------------------------------------------------------*/
/*                                                                          */
/* Validity checker program for JOBLOGLST command.                          */
/*                                                                          */
/* Dates: 2023/07/24 Creation                                               */
/*                                                                          */
/*--------------------------------------------------------------------------*/

PGM PARM(&GROUP &REPORTCMD &OUTPUT)

DCL VAR(&GROUP) TYPE(*CHAR) LEN(10)
DCL VAR(&REPORTCMD) TYPE(*CHAR) LEN(4)
DCL VAR(&OUTPUT) TYPE(*CHAR) LEN(6)

DCL VAR(&PARAM1) TYPE(*CHAR) LEN(10) VALUE('GROUP')
DCL VAR(&PARAM2) TYPE(*CHAR) LEN(10) VALUE('REPORTCMD')
DCL VAR(&PARAM3) TYPE(*CHAR) LEN(10) VALUE('OUTPUT')

INCLUDE SRCSTMF('../../common/includes/inc_variables_declare.clle')

/*--------------------------------------------------------------------------*/
/*                                                                          */
/* We cannot include the standard error handling routine because system     */
/* programs which run the validity checker expect only CPF0002 escape       */
/* when they call it.                                                       */
/* So, if an unexpected error occurs we handle it just like if it was an    */
/* error from one of the checks. And a specific error handling routine      */
/* exists for validity checker programs.                                    */
/*                                                                          */
/*--------------------------------------------------------------------------*/

INCLUDE +
    SRCSTMF('../../common/includes/inc_errorhandling_forchecker_declare.clle')

MONMSG MSGID(CPF0000) EXEC(GOTO CMDLBL(ERROR))

/*--------------------------------------------------------------------------*/
/*                                                                          */
/* Some initializations...                                                  */
/*                                                                          */
/*--------------------------------------------------------------------------*/

INCLUDE SRCSTMF('../../common/includes/inc_variables_init.clle')
CHGVAR VAR(&ERROR) VALUE(&FALSE)
CHGVAR VAR(&ERRORPARAM) VALUE(&FALSE)

/*--------------------------------------------------------------------------*/
/*                                                                          */
/* Checkings are the following:                                             */
/*                                                                          */
/* GROUP must not be empty.                                                 */
/* REPORTCMD must be *YES or *NO.                                           */
/* OUTPUT must be * or *PRINT.                                              */
/*                                                                          */
/*--------------------------------------------------------------------------*/

IF COND(&GROUP *EQ &BLANK) THEN(DO)
    CHGVAR VAR(&ERRORPARAM) VALUE(&TRUE)
    CHGVAR VAR(&MSGDTA) VALUE('0000')
    CHGVAR VAR(&MSGDTA) VALUE(&MSGDTA *TCAT &PARAM1)
    SNDPGMMSG MSGID(CPD0071) MSGF(QCPFMSG) MSGTYPE(*DIAG) MSGDTA(&MSGDTA)
ENDDO

IF COND(&REPORTCMD *NE &YES *AND &REPORTCMD *NE &NO) THEN(DO)
    CHGVAR VAR(&ERRORPARAM) VALUE(&TRUE)
    CHGVAR VAR(&MSGDTA) VALUE('0000')
    CHGVAR VAR(%SST(&MSGDTA 5 10)) VALUE(&PARAM2)
    CHGVAR VAR(%SST(&MSGDTA 15 10)) VALUE(&REPORTCMD)
    SNDPGMMSG MSGID(CPD0084) MSGF(QCPFMSG) MSGTYPE(*DIAG) MSGDTA(&MSGDTA)
ENDDO

IF COND(&OUTPUT *NE &DISPLAY *AND &OUTPUT *NE &PRINT) THEN(DO)
    CHGVAR VAR(&ERRORPARAM) VALUE(&TRUE)
    CHGVAR VAR(&MSGDTA) VALUE('0000')
    CHGVAR VAR(%SST(&MSGDTA 5 10)) VALUE(&PARAM3)
    CHGVAR VAR(%SST(&MSGDTA 15 10)) VALUE(&OUTPUT)
    SNDPGMMSG MSGID(CPD0084) MSGF(QCPFMSG) MSGTYPE(*DIAG) MSGDTA(&MSGDTA)
ENDDO

/*--------------------------------------------------------------------------*/
/*                                                                          */
/* Error hangling.                                                          */
/*                                                                          */
/*--------------------------------------------------------------------------*/

INCLUDE +
    SRCSTMF('../../common/includes/inc_errorhandling_forchecker_routine.clle')

ENDPGM
